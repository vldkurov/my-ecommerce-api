paths:
  /orders:
    get:
      tags:
        - Orders
      summary: Retrieve a list of orders
      description: Retrieve a list of orders for the authenticated user.
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: A list of orders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        401:
          description: Unauthorized, token missing or invalid
  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Retrieves a specific order by ID
      description: Fetches detailed information about an order, including items and total price, based on the order ID provided in the request path. Requires user authentication.
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
          description: The ID of the order to retrieve
      responses:
        200:
          description: Successfully retrieved the order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        401:
          description: Unauthorized, token missing or invalid
        404:
          description: Order not found
components:
  schemas:
    Order:
      type: object
      required:
        - totalPrice
        - orderId
        - userId
        - status
      properties:
        totalPrice:
          type: string
          description: The total price of the order.
        orderId:
          type: integer
          description: The order ID.
        userId:
          type: integer
          description: The ID of the user who placed the order.
        status:
          type: string
          description: The status of the order.
          enum: [ pending, completed, cancelled ]
      example:
        totalPrice: '£100.00'
        orderId: 1
        userId: 1
        status: 'pending'
    OrderItem:
      type: object
      required:
        - productId
        - quantity
        - price
      properties:
        productId:
          type: integer
          description: Unique identifier for the product
        quantity:
          type: integer
          description: Number of items of the product
        price:
          type: string
          description: Price of the product item
      example:
        productId: 1
        quantity: 2
        price: "£19.99"
